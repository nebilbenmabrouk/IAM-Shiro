
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

ssl.enabled = true
shiro.loginUrl = /login.jsp
#authc.successUrl  = /index.jsp
#shiro.postOnlyLogout = true

[main]
#contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory
#contextFactory.url = ldap://localhost:389
#contextFactory.systemUsername = cn=Manager,dc=example,dc=com
#contextFactory.systemPassword = secret
#contextFactory.environment[java.naming.security.protocol] = ssl

#realm = org.apache.shiro.realm.ldap.JndiLdapRealm
#realm.contextFactory.url = ldap://localhost:389
#realm.userDnTemplate = uid={0},ou=People,dc=example,dc=com

#contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory
#contextFactory.url = ldap://localhost:389
#contextFactory.systemUsername = cn=Manager,dc=example,dc=com
#contextFactory.systemPassword = secret

#==================================================================================================
#contextFactory = org.apache.shiro.realm.ldap.JndiLdapContextFactory
#contextFactory.url = ldap://localhost:11389
#contextFactory.systemUsername = uid=admin,ou=system
#contextFactory.systemPassword = secret

#contextFactory.environment[java.naming.security.protocol] = ssl

#realm = org.apache.shiro.realm.activedirectory.ActiveDirectoryRealm
#realm = org.sample.FortressLDAPRealm
#realm.ldapContextFactory = $contextFactory
#realm.searchBase = "ou=users,dc=activeeon,dc=com"
#realm.searchBase = "ou=Roles,ou=RBAC,dc=example,dc=com"
#realm.groupRolesMap = "ou=roles,dc=activeeon,dc=com":"ftRA"
#realm.groupRolesMap = "ou=RBAC,ou=Roles,dc=example,dc=com":"roleOccupant"
#realm.principalSuffix= "ou=People, dc=example, dc=com"

#realm.userDnTemplate = uid={0},ou=People,dc=example,dc=com
#==================================================================================================

ldapRealm = org.apache.shiro.realm.ldap.DefaultLdapRealm
ldapRealm.userDnTemplate = uid={0},ou=users,dc=activeeon,dc=com
ldapRealm.contextFactory.url = ldap://localhost:11389
ldapRealm.contextFactory.authenticationMechanism = SIMPLE
ldapRealm.contextFactory.environment[java.naming.security.principal] = uid=admin,ou=system
ldapRealm.contextFactory.environment[java.naming.security.credentials] = secret


securityManager.realms = $ldapRealm


#[users]
# format: username = password, role1, role2, ..., roleN
#root = secret,admin
#guest = guest,guest
#presidentskroob = 12345,president
#darkhelmet = ludicrousspeed,darklord,schwartz
#lonestarr = vespa,goodguy,schwartz

#[roles]
# format: roleName = permission1, permission2, ..., permissionN
#admin = *
#schwartz = lightsaber:*
#goodguy = winnebago:drive:eagle5

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
#
/login.jsp = ssl[8443],authc
/logout = ssl[8443],logout
/** = ssl[8443],authc
/account/** = authc
#/remoting/** = authc, roles[b2bClient], perms["remote:invoke:lan,wan"]


