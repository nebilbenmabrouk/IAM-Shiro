
[main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.sessionIdUrlRewritingEnabled = false

securityManager.sessionManager = $sessionManager
securityManager.cacheManager = $cacheManager

ssl.enabled = true
shiro.loginUrl = /login.jsp
#authc.successUrl  = /index.jsp
#shiro.postOnlyLogout = true

ldapRealm = org.apache.shiro.realm.ldap.DefaultLdapRealm
ldapRealm.userDnTemplate = uid={0},ou=users,dc=activeeon,dc=com
ldapRealm.contextFactory.url = ldap://localhost:11389
ldapRealm.contextFactory.authenticationMechanism = SIMPLE
ldapRealm.contextFactory.environment[java.naming.security.principal] = uid=admin,ou=system
ldapRealm.contextFactory.environment[java.naming.security.credentials] = secret

securityManager.realms = $ldapRealm

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
#
#authcBasic
/authentication/** = anon
/login.jsp = ssl[8443],authc
/logout = ssl[8443],logout
/** = ssl[8443],authc
/account/** = authc
#/remoting/** = authc, roles[b2bClient], perms["remote:invoke:lan,wan"]


